'use strict';

//Somewhat hacky way to convert Hex Color to RGB Array.
exports.hexToRgb = function (hex) {

	var match = hex.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = integer >> 16 & 0xFF;
	var g = integer >> 8 & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];

	// var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
	// var r = parseInt(result[1], 16);
	// var g = parseInt(result[2], 16);
	// var b = parseInt(result[3], 16);
	//
	// var rgb = result ? [r, g, b] : null;
	// return rgb;
};

//Convert rgb array to hsl array
exports.rgbToHsl = function (rgb) {
	var r = rgb[0],
	    g = rgb[1],
	    b = rgb[2];
	var max = Math.max(r, g, b),
	    min = Math.min(r, g, b);
	var h,
	    s,
	    l = (max + min) / 2;

	if (max == min) {
		h = s = 0; // achromatic
	} else {
		var d = max - min;
		s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
		switch (max) {
			case r:
				h = (g - b) / d + (g < b ? 6 : 0);break;
			case g:
				h = (b - r) / d + 2;break;
			case b:
				h = (r - g) / d + 4;break;
		}
		h /= 6;
	}

	return [h, s, l];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvY29sb3ItdXRpbHMuanMiXSwibmFtZXMiOlsiZXhwb3J0cyIsImhleFRvUmdiIiwiaGV4IiwibWF0Y2giLCJ0b1N0cmluZyIsImNvbG9yU3RyaW5nIiwibGVuZ3RoIiwic3BsaXQiLCJtYXAiLCJjaGFyIiwiam9pbiIsImludGVnZXIiLCJwYXJzZUludCIsInIiLCJnIiwiYiIsInJnYlRvSHNsIiwicmdiIiwibWF4IiwiTWF0aCIsIm1pbiIsImgiLCJzIiwibCIsImQiXSwibWFwcGluZ3MiOiI7O0FBQ0E7QUFDQUEsUUFBUUMsUUFBUixHQUFtQixVQUFTQyxHQUFULEVBQWM7O0FBRWhDLEtBQUlDLFFBQVFELElBQUlFLFFBQUosQ0FBYSxFQUFiLEVBQWlCRCxLQUFqQixDQUF1QiwwQkFBdkIsQ0FBWjtBQUNBLEtBQUksQ0FBQ0EsS0FBTCxFQUFZO0FBQ1gsU0FBTyxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxDQUFQO0FBQ0E7O0FBRUQsS0FBSUUsY0FBY0YsTUFBTSxDQUFOLENBQWxCOztBQUVBLEtBQUlBLE1BQU0sQ0FBTixFQUFTRyxNQUFULEtBQW9CLENBQXhCLEVBQTJCO0FBQzFCRCxnQkFBY0EsWUFBWUUsS0FBWixDQUFrQixFQUFsQixFQUFzQkMsR0FBdEIsQ0FBMEIsVUFBVUMsSUFBVixFQUFnQjtBQUN2RCxVQUFPQSxPQUFPQSxJQUFkO0FBQ0EsR0FGYSxFQUVYQyxJQUZXLENBRU4sRUFGTSxDQUFkO0FBR0E7O0FBRUQsS0FBSUMsVUFBVUMsU0FBU1AsV0FBVCxFQUFzQixFQUF0QixDQUFkO0FBQ0EsS0FBSVEsSUFBS0YsV0FBVyxFQUFaLEdBQWtCLElBQTFCO0FBQ0EsS0FBSUcsSUFBS0gsV0FBVyxDQUFaLEdBQWlCLElBQXpCO0FBQ0EsS0FBSUksSUFBSUosVUFBVSxJQUFsQjs7QUFFQSxRQUFPLENBQUNFLENBQUQsRUFBSUMsQ0FBSixFQUFPQyxDQUFQLENBQVA7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQTdCRDs7QUErQkE7QUFDQWYsUUFBUWdCLFFBQVIsR0FBbUIsVUFBU0MsR0FBVCxFQUFjO0FBQ2hDLEtBQUlKLElBQUlJLElBQUksQ0FBSixDQUFSO0FBQUEsS0FBZ0JILElBQUlHLElBQUksQ0FBSixDQUFwQjtBQUFBLEtBQTRCRixJQUFJRSxJQUFJLENBQUosQ0FBaEM7QUFDQSxLQUFJQyxNQUFNQyxLQUFLRCxHQUFMLENBQVNMLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLENBQVY7QUFBQSxLQUNDSyxNQUFNRCxLQUFLQyxHQUFMLENBQVNQLENBQVQsRUFBWUMsQ0FBWixFQUFlQyxDQUFmLENBRFA7QUFFQSxLQUFJTSxDQUFKO0FBQUEsS0FBT0MsQ0FBUDtBQUFBLEtBQVVDLElBQUksQ0FBQ0wsTUFBTUUsR0FBUCxJQUFjLENBQTVCOztBQUVBLEtBQUdGLE9BQU9FLEdBQVYsRUFDQTtBQUNDQyxNQUFJQyxJQUFJLENBQVIsQ0FERCxDQUNZO0FBQ1gsRUFIRCxNQUtBO0FBQ0MsTUFBSUUsSUFBSU4sTUFBTUUsR0FBZDtBQUNBRSxNQUFJQyxJQUFJLEdBQUosR0FBVUMsS0FBSyxJQUFJTixHQUFKLEdBQVVFLEdBQWYsQ0FBVixHQUFnQ0ksS0FBS04sTUFBTUUsR0FBWCxDQUFwQztBQUNBLFVBQVFGLEdBQVI7QUFFQyxRQUFLTCxDQUFMO0FBQVFRLFFBQUksQ0FBQ1AsSUFBSUMsQ0FBTCxJQUFVUyxDQUFWLElBQWVWLElBQUlDLENBQUosR0FBUSxDQUFSLEdBQVksQ0FBM0IsQ0FBSixDQUFtQztBQUMzQyxRQUFLRCxDQUFMO0FBQVFPLFFBQUksQ0FBQ04sSUFBSUYsQ0FBTCxJQUFVVyxDQUFWLEdBQWMsQ0FBbEIsQ0FBcUI7QUFDN0IsUUFBS1QsQ0FBTDtBQUFRTSxRQUFJLENBQUNSLElBQUlDLENBQUwsSUFBVVUsQ0FBVixHQUFjLENBQWxCLENBQXFCO0FBSjlCO0FBTUFILE9BQUssQ0FBTDtBQUNBOztBQUVELFFBQU8sQ0FBQ0EsQ0FBRCxFQUFJQyxDQUFKLEVBQU9DLENBQVAsQ0FBUDtBQUNBLENBeEJEIiwiZmlsZSI6ImNvbG9yLXV0aWxzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vL1NvbWV3aGF0IGhhY2t5IHdheSB0byBjb252ZXJ0IEhleCBDb2xvciB0byBSR0IgQXJyYXkuXG5leHBvcnRzLmhleFRvUmdiID0gZnVuY3Rpb24oaGV4KSB7XG5cblx0dmFyIG1hdGNoID0gaGV4LnRvU3RyaW5nKDE2KS5tYXRjaCgvW2EtZjAtOV17Nn18W2EtZjAtOV17M30vaSk7XG5cdGlmICghbWF0Y2gpIHtcblx0XHRyZXR1cm4gWzAsIDAsIDBdO1xuXHR9XG5cblx0dmFyIGNvbG9yU3RyaW5nID0gbWF0Y2hbMF07XG5cblx0aWYgKG1hdGNoWzBdLmxlbmd0aCA9PT0gMykge1xuXHRcdGNvbG9yU3RyaW5nID0gY29sb3JTdHJpbmcuc3BsaXQoJycpLm1hcChmdW5jdGlvbiAoY2hhcikge1xuXHRcdFx0cmV0dXJuIGNoYXIgKyBjaGFyO1xuXHRcdH0pLmpvaW4oJycpO1xuXHR9XG5cblx0dmFyIGludGVnZXIgPSBwYXJzZUludChjb2xvclN0cmluZywgMTYpO1xuXHR2YXIgciA9IChpbnRlZ2VyID4+IDE2KSAmIDB4RkY7XG5cdHZhciBnID0gKGludGVnZXIgPj4gOCkgJiAweEZGO1xuXHR2YXIgYiA9IGludGVnZXIgJiAweEZGO1xuXG5cdHJldHVybiBbciwgZywgYl07XG5cblx0Ly8gdmFyIHJlc3VsdCA9IC9eIz8oW2EtZlxcZF17Mn0pKFthLWZcXGRdezJ9KShbYS1mXFxkXXsyfSkkL2kuZXhlYyhoZXgpO1xuXHQvLyB2YXIgciA9IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpO1xuXHQvLyB2YXIgZyA9IHBhcnNlSW50KHJlc3VsdFsyXSwgMTYpO1xuXHQvLyB2YXIgYiA9IHBhcnNlSW50KHJlc3VsdFszXSwgMTYpO1xuXHQvL1xuXHQvLyB2YXIgcmdiID0gcmVzdWx0ID8gW3IsIGcsIGJdIDogbnVsbDtcblx0Ly8gcmV0dXJuIHJnYjtcbn07XG5cbi8vQ29udmVydCByZ2IgYXJyYXkgdG8gaHNsIGFycmF5XG5leHBvcnRzLnJnYlRvSHNsID0gZnVuY3Rpb24ocmdiKSB7XG5cdHZhciByID0gcmdiWzBdLCBnID0gcmdiWzFdLCBiID0gcmdiWzJdO1xuXHR2YXIgbWF4ID0gTWF0aC5tYXgociwgZywgYiksXG5cdFx0bWluID0gTWF0aC5taW4ociwgZywgYik7XG5cdHZhciBoLCBzLCBsID0gKG1heCArIG1pbikgLyAyO1xuXG5cdGlmKG1heCA9PSBtaW4pXG5cdHtcblx0XHRoID0gcyA9IDA7IC8vIGFjaHJvbWF0aWNcblx0fVxuXHRlbHNlXG5cdHtcblx0XHR2YXIgZCA9IG1heCAtIG1pbjtcblx0XHRzID0gbCA+IDAuNSA/IGQgLyAoMiAtIG1heCAtIG1pbikgOiBkIC8gKG1heCArIG1pbik7XG5cdFx0c3dpdGNoIChtYXgpXG5cdFx0e1xuXHRcdFx0Y2FzZSByOiBoID0gKGcgLSBiKSAvIGQgKyAoZyA8IGIgPyA2IDogMCk7IGJyZWFrO1xuXHRcdFx0Y2FzZSBnOiBoID0gKGIgLSByKSAvIGQgKyAyOyBicmVhaztcblx0XHRcdGNhc2UgYjogaCA9IChyIC0gZykgLyBkICsgNDsgYnJlYWs7XG5cdFx0fVxuXHRcdGggLz0gNjtcblx0fVxuXG5cdHJldHVybiBbaCwgcywgbF07XG59OyJdfQ==